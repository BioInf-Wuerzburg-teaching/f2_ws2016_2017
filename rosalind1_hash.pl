use warnings;

$seq="TGACCCAGCACTGGCGATCTTTATCACGTAATGTACGGCAGGCTGGCCTAGATCCAGTAATGTTGTAACGCTCTACAACACTTTGCAAGGTTCTAATTACCACATGGCTGTATTCCACGCTAAAGGTACCAACCACTAAACCGACATGCTAGCTAGAATGTTCCGACAGTATGTAACGGGTGTCCTATGGATGGGGTCCGGGAACGGTTGATTGGGACAGTCCCGTCCGAGTTTCGGTCGGACTGGTGCACAACCACGGTTACAATCTCAGTAGGCTAGTAAGGTGGCATACTGGTTCGCCTTTCACATGCATGAGTGATAGTGCTCAATTCTGGCAAGTTAACAAACATAAAAGCTCCTGAGGACATCGTATCAATTGGAGAGGAGGGTAAGGAATGTGCATCCGACTGATTTGATGTCGGCGGTGCGGAGCTCCCCAAAGGTATGGTGAACGGCGTACTGACTATAACCGCGGATTTTGCGTAGTGGAGCGGTAAAGGTAGTCTCAACCCAGTTCCGACTGTCAGCCCAGCACTGAGCTACCGCAGGGCAATGGTCCTAGGGCGAGTTCCGCACTGCTTATTCAGGCTGCGCGTCCCAGGAATAGTGATGCCTTAGTCGTTATCGTACCTCGAATATCGCTACAACTGAATGGAGCGCGTTAATCGCAAATACGGGGTTGGACCTGTGGCTGAGGAGGTTTGCTGAGCATAAGTAGATGGAGCGTGGTTGAGCGCTCCGTCTATCCTTCCAGTATATAACCAACCTTCGACCGCGTTAATTCCTTAAGTCCCGCATATTACTGGGTTAGACTCCTGGATTCGCCATGAGACGGGZG";


@bases=split(//,$seq);
$l=@bases;
%hash=();
       
for ($i=0;$i<$l;$i++)
{
    $nucl=$bases[$i];  #aktuelles Nukleotid
    $hash{$nucl}++;    #legt automatisch neue Buchstaben als Schlüssel an und ordnet jedem dem Wert 1 zu
    
}

if (exists $hash{Z})
{
    print "Z ist da\n";
}

print "A ",$hash{"A"},"\n";        #gibt den Wert für A

foreach $schluessel(sort keys %hash)
{
    #if ($schluessel eq "Z")
    #{
#	print "Z ist da\n";
    #}
    if ($schluessel eq "A")    #nur für A ausgeben
    {
	print "$schluessel ";
	print "$hash{$schluessel}\n";
    }
}

print "\n";
